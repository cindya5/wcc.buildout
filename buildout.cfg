[buildout]
extensions = 
parts = 
    instance
    omelette
    scripts
    releaser

extends =
    http://good-py.appspot.com/release/dexterity/1.2.1?plone=4.2rc2
    http://dist.plone.org/release/4.2.1/versions.cfg
    versions.cfg

effective-user = 
show-picked-versions = true
versions = versions
find-links =
    http://packages.inigo-tech.com/packages/

# ============================================== Start
# These settings will be overridden with OpenShift's environment variables
# during deployment
log-directory = ${buildout:directory}/var/log/
data-directory = ${buildout:directory}/var
pyeggcache-directory = ${buildout:directory}/var/egg-cache
http-address = 8080
# ================================================ End

policies = 
    wcc.policy
    wcc.assemblypolicy
    wcc.ewnpolicy

extensions = mr.developer
sources-dir = dev/
auto-checkout = 
    wcc.policy
    wcc.assemblytheme
    wcc.assemblypolicy
    wcc.content
    wcc.tinymce
    wcc.songs
    wcc.theme
    wcc.common
    wcc.churches
    wcc.vocabularies
    wcc.prayercycle
    wcc.featurable
    wcc.carousel
    wcc.weeklynews
    wcc.activity
    wcc.twitterportlet
    wcc.ewnpolicy
    wcc.importer
    wcc.videolink
    wcc.rawhtml
    wcc.audiofile
    wcc.document
    wcc.donation
    wcc.multilingual
    wcc.homepage
    wcc.watertheme
#    plone.multilingualbehavior
#    collective.miscbehaviors


[sources]
wcc.policy = git http://github.com/inigoconsulting/wcc.policy.git
wcc.assemblytheme = git http://github.com/inigoconsulting/wcc.assemblytheme.git 
wcc.assemblypolicy = git http://github.com/inigoconsulting/wcc.assemblypolicy.git 
wcc.content = git https://github.com/inigoconsulting/wcc.content.git 
wcc.tinymce = git https://github.com/inigoconsulting/wcc.tinymce.git 
wcc.songs = git https://github.com/inigoconsulting/wcc.songs.git 
wcc.theme = git https://github.com/inigoconsulting/wcc.theme.git
wcc.common = git https://github.com/inigoconsulting/wcc.common.git
wcc.churches = git https://github.com/inigoconsulting/wcc.churches.git
wcc.vocabularies = git https://github.com/inigoconsulting/wcc.vocabularies.git
wcc.prayercycle = git https://github.com/inigoconsulting/wcc.prayercycle.git
wcc.featurable = git https://github.com/inigoconsulting/wcc.featurable.git
wcc.carousel = git https://github.com/inigoconsulting/wcc.carousel.git
#plone.multilingualbehavior = git https://github.com/plone/plone.multilingualbehavior
#collective.miscbehaviors = git https://github.com/inigoconsulting/collective.miscbehaviors
wcc.weeklynews = git https://github.com/inigoconsulting/wcc.weeklynews.git
wcc.activity = git https://github.com/inigoconsulting/wcc.activity.git
wcc.twitterportlet = git https://github.com/inigoconsulting/wcc.twitterportlet.git
wcc.ewnpolicy = git https://github.com/inigoconsulting/wcc.ewnpolicy.git
wcc.importer = git https://github.com/inigoconsulting/wcc.importer.git
wcc.videolink = git https://github.com/inigoconsulting/wcc.videolink.git
wcc.rawhtml = git https://github.com/inigoconsulting/wcc.rawhtml.git
wcc.audiofile = git https://github.com/inigoconsulting/wcc.audiofile.git
wcc.document = git https://github.com/inigoconsulting/wcc.document.git
wcc.donation = git https://github.com/inigoconsulting/wcc.donation.git
wcc.multilingual = git https://github.com/inigoconsulting/wcc.multilingual.git
wcc.homepage = git https://github.com/inigoconsulting/wcc.homepage.git
wcc.watertheme = git https://github.com/inigoconsulting/wcc.watertheme.git



[mr.developer]
threads = 1

[instance]
recipe = plone.recipe.zope2instance
eggs = 
    Plone
    Pillow
    plone.app.dexterity
    Products.PloneHotfix20121106
    ${buildout:policies}

http-address = ${buildout:http-address}
user = admin:OpenShiftAdmin
effective-user = ${buildout:effective-user}

environment-vars = 
    PYTHON_EGG_CACHE ${buildout:pyeggcache-directory}
    HOME ${buildout:directory}/var/

zodb-cache-size = 300
event-log = ${buildout:log-directory}/${:_buildout_section_name_}.log
z2-log = ${buildout:log-directory}/${:_buildout_section_name_}-Z2.log
file-storage = ${buildout:data-directory}/filestorage/Data.fs
blob-storage = ${buildout:data-directory}/blobstorage/

[omelette]
recipe = collective.recipe.omelette
eggs = ${instance:eggs}

[scripts]
recipe = zc.recipe.egg
interpreter = zopepy
eggs = ${instance:eggs}

[releaser]
recipe = collective.recipe.template
input = templates/releaser.py.in
output = ${buildout:bin-directory}/releaser.py
auto-release = ${buildout:auto-checkout}
