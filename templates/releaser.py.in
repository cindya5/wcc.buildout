#!/usr/bin/env python

import subprocess, os, sys
from zest.releaser.vcs import BaseVersionControl
from zest.releaser import utils
import shutil

autorelease = '''${auto-release}'''
releaser = 'fullrelease'

packages = [i.strip() for i in autorelease.split('\n') if i.strip()]

directory = '${buildout:directory}'
sourcesdir = '${buildout:sources-dir}'

versions = {}
for package in packages:
    os.chdir('%s/%s/%s' % (directory, sourcesdir, package))
    versions[package] = BaseVersionControl()._extract_version()
    os.system('git log | head -n 50')
    releaseme = raw_input('Release %s? (y/N/abort)' % package)
    if releaseme.lower().strip() == 'y':
        os.system(releaser)
    elif releaseme.lower().strip()[0] == 'a':
        sys.exit(1)

stream = '[versions]'
for i, v in versions.items():
    ver = "%s=%s" % (i, utils.cleanup_version(v))
    stream+='\n%s' % ver

versionfile = '${buildout:directory}/releaseversions.cfg'
oldversionfile = '${buildout:directory}/releaseversions.cfg.old'
if os.path.exists(versionfile):
    shutil.move(versionfile, oldversionfile)
open(versionfile, 'w').write(stream)
print stream
